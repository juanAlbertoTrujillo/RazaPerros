# -*- coding: utf-8 -*-
"""Evidencia #2 JATN

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xgwUvBO5emPEExAa-QoXUFK24-P8T1_4

Evidencia# 2

Curso: CC.MTCA2401FLE.102.202530.310-Análisis estadístico y exploratorio

Alumno: Juan Alberto Trujillo Navarrete

Matricula: AL07099453  

Tutor: Julio César Cruz Cruz

Fecha de entrega: 06/10/2024

## Contextualización y justificación del caso de análisis  

El Bitcoin es una moneda digital creada en 2009 que ha revolucionado la forma en que entendemos el dinero y las inversiones. A diferencia de las monedas tradicionales, no depende de bancos o gobiernos, sino de una red descentralizada llamada blockchain. Su valor ha mostrado fuertes variaciones a lo largo del tiempo, con periodos de gran crecimiento y caídas abruptas, lo que lo convierte en un activo atractivo pero también muy riesgoso. Este análisis busca estudiar el comportamiento histórico del precio del Bitcoin para comprender las razones detrás de sus fluctuaciones y cómo influyen factores como la oferta, la demanda y la percepción del mercado. Con esto se pretende identificar patrones o tendencias que ayuden a entender por qué algunas personas logran obtener ganancias significativas mientras otras pierden parte o todo su capital. El propósito final es aprender cómo los datos pueden ayudar a tomar decisiones de inversión más informadas.

---

### Referencias

- Nakamoto, S. (s. f.). Bitcoin: a Peer-to-Peer electronic cash system. bitcoin.org. https://bitcoin.org/bitcoin.pdf

- Habrador. (s. f.). Bitcoin-price-visualization/Bitcoin-price-USD.csv at main · Habrador/Bitcoin-price-visualization. GitHub. https://github.com/Habrador/Bitcoin-price-visualization/blob/main/Bitcoin-price-USD.csv

## Procesamiento de datos: carga, limpieza, normalización e integración
### Pasos iniciales
Impotar las librerias y cargar el dataset desde github
"""

# Importando librerías que se irán necesitando a lo largo del análisis
import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.impute import SimpleImputer
import matplotlib.pyplot as plt
import scipy.stats as stats
from sklearn.preprocessing import MinMaxScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error
from sklearn.cluster import KMeans
# Series temporales
from statsmodels.tsa.seasonal import seasonal_decompose
from statsmodels.tsa.stattools import adfuller
from statsmodels.tsa.arima.model import ARIMA

# Carga desde github
# Este paso, sería el equivalente a la extracción de información del ETL
df = pd.read_csv("https://raw.githubusercontent.com/Habrador/Bitcoin-price-visualization/refs/heads/main/Bitcoin-price-USD.csv")
df_Original = df

# Vista general
print("Shape:", df.shape)

"""Al ser el historico de bitcoint se puede observar una gran cantidad de filas: 5139 y solo 2 columnas

### Muestreo inical de los datos
Se imprimen las primeras filas de los datos para visualizar sus valores
"""

print("Primeras filas:")
display(df.head())

"""### Descripción de columnas
Descripción general de las columnas, donde se muestra en nombre de la cabecera, valores no nulos y tipos de datos
"""

df.info()

"""Como se puede observar la información no contiene datos nulos, pero el campo fecha es de tipo onject, por lo que es posible que para su futuro uso sea necesario transformarlo a tipo Date"""

#Convertir fecha y revisar datos ---
df["Date"] = pd.to_datetime(df["Date"])
df = df.sort_values("Date")
#Filtrar los últimos 5 años
ultimo_anio = df['Date'].max().year
df = df[df['Date'].dt.year >= ultimo_anio - 5]
df.info()

"""Aquí ya se puede ver cómo la columna fecha después de realizar la transformación, ya tiene el formato adecuado para utilizarlo para los siguientes pasos.

Además se seleccionaron los **últimos 5 años debido** a que al inicio de bitcoin al tener muy poca aceptación nos genera un gran **sesgo**.

## Visualización

### Histogramas
"""

# Histograma del precio
plt.figure(figsize=(6,4))
plt.hist(df['Price'], bins=30, color='skyblue', edgecolor='black')
plt.title('Distribución de precios del Bitcoin (últimos 5 años)')
plt.xlabel('Precio en USD')
plt.ylabel('Frecuencia')
plt.tight_layout()
plt.show()

"""> El histograma muestra cómo se distribuyen los precios del Bitcoin en los últimos cinco años. La mayoría de los valores se concentran en rangos intermedios, entre los 15 000 y 40 000 USD, mientras que existen algunos valores muy altos que representan los picos de 2021 y 2024. La forma alargada hacia la derecha indica una distribución sesgada, es decir, hay pocos precios extremadamente altos que elevan el promedio. Esto sugiere que el Bitcoin ha tenido etapas cortas de precios muy elevados y periodos más largos de estabilidad o corrección. La concentración en los valores medios también muestra que, aunque la volatilidad es grande, el precio tiende a regresar a un rango relativamente estable con el paso del tiempo.

### Boxplot
"""

# Boxplot para ver dispersión y outliers
plt.figure(figsize=(6,4))
sns.boxplot(y=df['Price'], color='lightgreen')
plt.title('Boxplot del precio de Bitcoin (últimos 5 años)')
plt.ylabel('Precio en USD')
plt.tight_layout()
plt.show()

"""> El boxplot refleja la alta variabilidad del Bitcoin. La caja es grande y las “bigotes” se extienden mucho, lo que confirma la existencia de fuertes fluctuaciones de precios. Los puntos aislados superiores son los valores atípicos, correspondientes a los máximos históricos. La mediana se encuentra mucho más cerca del extremo inferior, lo que indica que la mayoría del tiempo el precio estuvo por debajo de los máximos. Esta gráfica permite ver la volatilidad característica del activo: en un periodo de cinco años, su valor ha tenido saltos drásticos y descensos considerables, lo que explica por qué muchos inversionistas pueden ganar o perder dinero dependiendo del momento en que compran o venden.

### Dispersión
"""

# Dispersión tiempo vs precio
plt.figure(figsize=(8,4))
plt.scatter(df['Date'], df['Price'], s=10, color='orange')
plt.title('Evolución del precio del Bitcoin (últimos 5 años)')
plt.xlabel('Fecha')
plt.ylabel('Precio en USD')
plt.tight_layout()
plt.show()

"""> El gráfico de dispersión evidencia la evolución temporal del precio. Se observan picos notorios, especialmente en 2021 y nuevamente en 2024, donde el Bitcoin alcanzó valores récord. Entre esos periodos hay caídas pronunciadas que marcan fases bajistas. Esta tendencia cíclica muestra cómo el Bitcoin alterna fases de euforia y corrección, impulsadas por factores externos como noticias, adopción institucional o cambios regulatorios. Aunque la tendencia general a largo plazo es ascendente, la gran cantidad de altibajos hace que la inversión sea riesgosa si no se consideran los momentos del mercado.

# Evidencia 2
## Punto 1.  Aplicación de técnicas avanzadas de modelado

### Clustering
"""

# Clustering
# Aplicar KMeans con 3 grupos (bajo, medio, alto)
kmeans = KMeans(n_clusters=3, random_state=42, n_init=10)
df['Cluster'] = kmeans.fit_predict(df[['Price']])

# Sacar el promedio del precio por cada grupo
promedio0 = df[df['Cluster'] == 0]['Price'].mean()
promedio1 = df[df['Cluster'] == 1]['Price'].mean()
promedio2 = df[df['Cluster'] == 2]['Price'].mean()

print("Promedio del clúster 0:", promedio0)
print("Promedio del clúster 1:", promedio1)
print("Promedio del clúster 2:", promedio2)

# Crear la columna 'Nivel de Precio' vacía
df['Nivel de Precio'] = ""

# Asignar nombres según los promedios observados
df.loc[df['Cluster'] == 0, 'Nivel de Precio'] = 'Bajo'
df.loc[df['Cluster'] == 1, 'Nivel de Precio'] = 'Alto'
df.loc[df['Cluster'] == 2, 'Nivel de Precio'] = 'Medio'

# Gráfico: Precio en el tiempo coloreado por clúster
plt.figure(figsize=(8,5))
for nivel in ['Bajo','Medio','Alto']:
    m = df['Nivel de Precio'] == nivel
    plt.scatter(df.loc[m,'Date'], df.loc[m,'Price'], s=10, label=nivel)
plt.title('Bitcoin (Precio) — Agrupado por niveles mediante KMeans')
plt.xlabel('Fecha')
plt.ylabel('Precio en USD')
plt.legend(title='Nivel de Precio')
plt.tight_layout()
plt.show()

"""> El gráfico muestra el comportamiento del precio del Bitcoin durante los últimos cinco años, agrupado en tres niveles de precio mediante un análisis de clustering KMeans. Los colores representan periodos en que el valor se mantuvo en rangos similares: bajo, medio o alto. Se observa que los niveles bajos corresponden a etapas de corrección o caída, mientras que los niveles altos coinciden con los picos históricos. Los puntos de color medio muestran transiciones entre fases de subida y bajada. Este método sencillo permite visualizar cómo el mercado pasa por distintos precios, lo que ayuda a comprender por qué algunos inversionistas compran en zonas bajas y venden en zonas altas, mientras que otros pierden al entrar cuando el precio ya está en sus máximos.

### Series temporales

### Estacionalidad
"""

# Se toma el dataset sin modificaciones
dfe = df_Original
# Filtrar los últimos 5 años
dfe = dfe[dfe['Date'] >= '2019-01-01']

# 3) Agrupar por mes (promedio)
dfe = dfe.set_index('Date').resample('ME').mean()

# 4) Descomponer la serie
result = seasonal_decompose(dfe['Price'], model='additive', period=12)

# 5) Graficar solo la estacionalidad
plt.figure(figsize=(8,4))
plt.plot(result.seasonal.index, result.seasonal, color='green', label='Componente estacional')
plt.title('Componente estacional del precio mensual del Bitcoin (2019–2024)')
plt.xlabel('Fecha')
plt.ylabel('Variación estacional (USD)')
plt.legend()
plt.tight_layout()
plt.show()

"""> La gráfica muestra la componente estacional del precio mensual del Bitcoin entre 2010 y 2024. Se observan fluctuaciones repetitivas cada año, con picos positivos y negativos bien definidos. Esto sugiere que, aunque el Bitcoin no sigue un patrón fijo, sí presenta cierta repetición anual en sus movimientos. Generalmente, los precios tienden a aumentar hacia finales de año y a disminuir en los primeros meses, lo que podría estar relacionado con factores como las compras de fin de año, reajustes de portafolios o expectativas de mercado. Sin embargo, la amplitud de las variaciones es irregular, lo que indica que la estacionalidad no es del todo estable.

#### Graficas de Tendencias de Bitcoin
"""

# Visualización
plt.figure(figsize=(8,4))
plt.plot(df.index, df['Price'], label='Precio mensual promedio de Bitcoin', color='orange')
plt.title('Precio mensual del Bitcoin (2019–2024)')
plt.xlabel('Fecha')
plt.ylabel('Precio en USD')
plt.legend()
plt.tight_layout()
plt.show()

# Visualización suavizada
plt.figure(figsize=(8,4))
plt.plot(dfe.index, dfe['Price'], label='Precio mensual suavizada promedio de Bitcoin', color='orange')
plt.title('Precio mensual del Bitcoin (2019–2024)')
plt.xlabel('Fecha')
plt.ylabel('Precio en USD')
plt.legend()
plt.tight_layout()
plt.show()

"""

> El gráfico muestra el precio mensual promedio del Bitcoin con su tendencia suavizada. Se observa un fuerte crecimiento entre 2020 y 2021, coincidiendo con el aumento del interés institucional y mediático en las criptomonedas. A partir de 2022, la tendencia cambia abruptamente mostrando una caída marcada. En 2023 y 2024, la línea vuelve a mostrar una recuperación moderada, reflejando una etapa de estabilización. Este comportamiento confirma que el Bitcoin tiene ciclos de expansión y corrección bien definidos, lo que hace necesario elegir un modelo de series temporales que capture tanto las fluctuaciones como las tendencias generales para poder analizar y predecir su comportamiento de forma más precisa.

"""

bitcoin = df_Original.copy()
bitcoin["Date"] = pd.to_datetime(bitcoin["Date"])
bitcoin = bitcoin.sort_values("Date")

# Usar la fecha como índice antes de filtrar
bitcoin = bitcoin.set_index("Date")

# Filtrar últimos 5 años y convertir a mensual
bitcoin = bitcoin[bitcoin.index >= '2019-01-01']
bitcoin = bitcoin.resample('ME').mean()

# Prueba de estacionariedad
resultado_adf = adfuller(bitcoin["Price"].dropna())
print("Estadístico ADF:", resultado_adf[0])
print("Valor p:", resultado_adf[1])

"""

> El valor p = 0.35 es mayor que 0.05, por lo tanto no se rechaza la hipótesis nula del test ADF.
Esto significa que la serie NO es estacionaria, es decir, el precio del Bitcoin presenta tendencia a lo largo del tiempo y sus medias y varianzas cambian.
>
> En términos prácticos:
>
> * Los valores del precio no fluctúan alrededor de un promedio constante.
> * Hay crecimiento y caídas prolongadas (como vimos en la tendencia).
>
>Por eso, para modelar el comportamiento del Bitcoin se recomienda aplicar una diferenciación (d = 1) antes de usar ARIMA o SARIMA

"""

# Aplicar la primera diferenciación
bitcoin_diff = bitcoin["Price"].diff().dropna()

# Visualizar la serie diferenciada
plt.figure(figsize=(12,4))
plt.plot(bitcoin_diff.index, bitcoin_diff.values, label='Primera diferencia del precio de Bitcoin')
plt.title('Serie diferenciada del Bitcoin (d = 1)')
plt.xlabel('Fecha')
plt.ylabel('Cambio mensual en USD')
plt.legend()
plt.tight_layout()
plt.show()

# Verificar nuevamente si ya es estacionaria
resultado_adf_diff = adfuller(bitcoin_diff)
print("Estadístico ADF (serie diferenciada):", resultado_adf_diff[0])
print("Valor p:", resultado_adf_diff[1])

"""> El valor p = 0.0000076 es menor que 0.05, lo que significa que rechazamos la hipótesis nula de la prueba ADF.
Esto indica que la serie diferenciada del precio del Bitcoin es estacionaria.
>
>Después de aplicar la primera diferencia (d = 1), la tendencia desapareció y la serie ahora fluctúa alrededor de una media constante.

#### Por falta de tiempo falta realizar la predicción con el modelo SARIMA

### Utilizando el modelo ARIMA
"""

# Preparar los datos
url = "https://raw.githubusercontent.com/Habrador/Bitcoin-price-visualization/refs/heads/main/Bitcoin-price-USD.csv"
df = pd.read_csv(url, parse_dates=['Date'], index_col='Date')

# Convertir a mensual
bitcoin = df[df.index >= '2019-01-01'].resample('ME').mean()

# Dividir en entrenamiento y prueba (por ejemplo, 80% train, 20% test)
train_size = int(len(bitcoin) * 0.8)
train = bitcoin.iloc[:train_size]
test = bitcoin.iloc[train_size:]
# Paso 2. Ajustar y predecir con ARIMA
modelo_arima = ARIMA(train['Price'], order=(1,1,1))
ajuste_arima = modelo_arima.fit()

# Predicciones para el mismo rango de prueba
pred_arima = ajuste_arima.forecast(steps=len(test))

# Evaluar el desempeño del modelo
rmse_arima = np.sqrt(mean_squared_error(test['Price'], pred_arima))
mae_arima = mean_absolute_error(test['Price'], pred_arima)

print(f"RMSE: {rmse_arima:.2f}")
print(f"MAE: {mae_arima:.2f}")

# Graficar resultados
plt.figure(figsize=(12,5))
plt.plot(train.index, train['Price'], label='Entrenamiento', color='orange')
plt.plot(test.index, test['Price'], label='Datos reales (Prueba)', color='green')
plt.plot(test.index, pred_arima, label='Predicción ARIMA', color='blue')
plt.title('Predicción del precio mensual del Bitcoin con ARIMA')
plt.xlabel('Fecha')
plt.ylabel('Precio en USD')
plt.legend()
plt.tight_layout()
plt.show()

"""> El modelo muestra que el precio del Bitcoin ha tenido grandes subidas y bajadas desde 2019. Se ve una fuerte alza en 2020-2021, una caída importante en 2022 y luego una recuperación más estable. El modelo ARIMA trata de predecir esa tendencia usando los datos del pasado, y aunque sigue bien la dirección general, no logra anticipar los cambios bruscos.
El error medio (MAE) de unos 19 mil dólares y el RMSE de 24 mil dólares indican que el pronóstico es razonable para una moneda tan volátil, pero no exacto. En otras palabras, el modelo puede servir para tener una idea general de cómo se mueve el Bitcoin mes a mes, pero no para predecir con precisión los picos o caídas repentinas típicos de este mercado.

## Punto 2. Construcción de narrativa basada en datos
El análisis del comportamiento mensual del precio del Bitcoin evidenció una tendencia ascendente acompañada de una marcada volatilidad. Entre 2020 y 2021 se registró un crecimiento acelerado que posteriormente derivó en una caída significativa durante 2022, seguida de una recuperación moderada a partir de 2023. Estos resultados confirman que el Bitcoin es un activo altamente sensible a las condiciones del mercado global, las decisiones regulatorias y los cambios en la confianza de los inversionistas.

Con base en estos hallazgos, se proponen tres decisiones organizacionales específicas:
* **Adoptar una estrategia de inversión prudente:** limitandoLimitar la exposición a criptomonedas para mitigar riesgos financieros.
* **Desarrollar un sistema de monitoreo y alerta temprana:** esto permita detectar variaciones abruptas en el precio y actuar de forma preventiva.
* **Diversificación del portafolio de activos:** integrar instrumentos financieros más estables que garanticen una mayor seguridad ante la volatilidad del mercado cripto.

## Punto 3. Reflexión ética del análisis
El análisis del comportamiento del precio del Bitcoin implica diversos riesgos éticos que deben considerarse para garantizar la integridad y objetividad de los resultados.
Un **primer riesgo** es el **sesgo en la interpretación de los datos**, ya que los analistas podrían adaptar las conclusiones a expectativas personales o institucionales, generando decisiones de inversión poco fundamentadas o excesivamente optimistas. Este sesgo puede conducir a pérdidas económicas o estrategias equivocadas.

Un **segundo riesgo** corresponde a la **vulneración de la privacidad**, especialmente si se integran bases de datos que contengan información de usuarios, transacciones o billeteras digitales. El manejo inadecuado de estos datos podría exponer información sensible y afectar la confianza de los participantes del mercado.

Por último, existe el **riesgo de uso inequitativo de los resultados**, cuando las conclusiones del análisis se utilizan para beneficiar a un grupo reducido (por ejemplo, inversionistas privilegiados) en detrimento de otros actores. Esto podría distorsionar el acceso a información financiera y generar prácticas desleales o discriminatorias en la toma de decisiones organizacionales.

## Punto 5. Propuesta de acciones estratégicas
A partir de los riesgos éticos identificados, se plantean tres acciones estratégicas orientadas a fortalecer la transparencia, la equidad y la responsabilidad en la toma de decisiones organizacionales basadas en análisis de datos.

1. Es establecer un protocolo de validación y revisión cruzada de resultados, en el cual los análisis sean evaluados por diferentes especialistas antes de su publicación o uso interno. Esto ayuda a reducir el sesgo interpretativo, asegurando que las conclusiones respondan a la evidencia y no a percepciones personales o intereses particulares.

2. Diseñar e implementar políticas institucionales de seguridad y protección de datos, que incluyan la anonimización de información sensible, el acceso controlado y el cumplimiento estricto de normativas de privacidad. De esta manera, se minimiza el riesgo de vulnerar la confidencialidad de los usuarios o de exponer información financiera delicada.

3. Creación de un comité de ética y equidad en el uso de la información, responsable de supervisar cómo se aplican los resultados de los análisis dentro de la organización. Este comité garantizaría que la información se utilice de manera justa, evitando que solo algunos grupos tengan acceso a los hallazgos y fomentando la toma de decisiones compartida, transparente y socialmente responsable.
"""